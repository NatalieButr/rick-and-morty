{"version":3,"sources":["utils/error/WebError.js","utils/index.js","redux/types.js","utils/constants.js","components/common/Spinner/index.js","components/container/Character/index.js","redux/сharacters/actions.js","screens/CharacterPage.js","components/container/Characters/CharacterCard/index.js","components/container/Characters/index.js","screens/CharactersPage.js","hooks/usePreventScroll.js","components/common/ModalPortal/index.js","components/common/Modal/index.js","components/common/ErrorDialog/index.js","redux/errors/actions.js","App.js","redux/loader/actions.js","redux/sagas.js","redux/сharacters/reducer.js","redux/errors/reducer.js","redux/loader/reducer.js","redux/index.js","Store.js","index.js"],"names":["WebError","code","message","status","Error","fetchData","url","a","fetch","response","json","data","ok","error","FETCH_CHARACTER_LIST","RECEIVE_CHARACTER_LIST_SUCCESS","RECEIVE_CHARACTER_LIST_ERROR","FETCH_MORE_CHARACTER_LIST","RECEIVE_MORE_CHARACTER_LIST_SUCCESS","FETCH_CHARACTER","RECEIVE_CHARACTER_SUCCESS","RECEIVE_CHARACTER_ERROR","HIDE_ERROR","SHOW_LOADER","HIDE_LOADER","API_ROOT","process","ALIVE","DEAD","Spinner","className","Character","id","useParams","dispatch","useDispatch","useSelector","state","character","characters","isLoading","loader","useEffect","params","type","receiveData","receiveError","callAPI","to","alt","name","src","image","species","gender","location","CharacterPage","CharacterCard","item","Characters","characterList","info","useState","isLoadingMore","setIsLoadingMore","useCallback","next","observeBorder","node","IntersectionObserver","entries","forEach","en","intersectionRatio","threshold","observe","map","ref","CharactersPage","usePreventScroll","useLayoutEffect","document","body","setAttribute","removeAttribute","ModalPortal","ReactDOM","createPortal","this","props","children","React","Component","Modal","onClose","onKeyPress","role","tabIndex","onClick","ErrorDialog","errors","isError","App","exact","path","component","hideLoader","sagaWorker","sagaWatcher","action","put","call","payload","takeEvery","initialState","root","combineReducers","results","saga","createSagaMiddleware","store","createStore","rootReducer","compose","applyMiddleware","thunk","run","app","render","getElementById"],"mappings":"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","file":"static/js/main.59398567.chunk.js","sourcesContent":["class WebError extends Error {\r\n  constructor({ code, message, status }) {\r\n    super();\r\n\r\n    this.code = code;\r\n    this.status = status;\r\n    this.message = message;\r\n  }\r\n}\r\n\r\nexport default WebError;\r\n","import WebError from \"utils/error/WebError\";\r\n\r\nasync function fetchData(url) {\r\n  let response = await fetch(url);\r\n  let data = await response.json();\r\n\r\n  const { status } = response;\r\n  if (response?.ok) {\r\n    return data;\r\n  }\r\n  throw new WebError({\r\n    status,\r\n    code: status,\r\n    message: data.error,\r\n  });\r\n}\r\n\r\nexport { fetchData };\r\n","export const FETCH_CHARACTER_LIST = \"FETCH_CHARACTER_LIST\";\r\nexport const RECEIVE_CHARACTER_LIST_SUCCESS = \"RECEIVE_CHARACTER_LIST_SUCCESS\";\r\nexport const RECEIVE_CHARACTER_LIST_ERROR = \"RECEIVE_CHARACTER_LIST_ERROR\";\r\n\r\nexport const FETCH_MORE_CHARACTER_LIST = \"FETCH_MORE_CHARACTER_LIST\";\r\nexport const RECEIVE_MORE_CHARACTER_LIST_SUCCESS =\r\n  \"RECEIVE_MORE_CHARACTER_LIST_SUCCESS\";\r\nexport const RECEIVE_MORE_CHARACTER_LIST_ERROR =\r\n  \"RECEIVE_MORE_CHARACTER_LIST_ERROR\";\r\n\r\nexport const FETCH_CHARACTER = \"FETCH_CHARACTER\";\r\nexport const RECEIVE_CHARACTER_SUCCESS = \"RECEIVE_CHARACTER_SUCCESS\";\r\nexport const RECEIVE_CHARACTER_ERROR = \"RECEIVE_CHARACTER_ERROR\";\r\n\r\nexport const HIDE_ERROR = \"HIDE_ERROR\";\r\nexport const SHOW_LOADER = \"SHOW_LOADER\";\r\nexport const HIDE_LOADER = \"HIDE_LOADER\";\r\n","export const API_ROOT = process.env.REACT_APP_API_ROOT;\r\nexport const ALIVE = \"Alive\";\r\nexport const DEAD = \"Dead\";\r\n","import React from \"react\";\r\n\r\nimport \"./styles.scss\";\r\n\r\nexport default function Spinner() {\r\n  return (\r\n    <div className=\"spinner\">\r\n      <div className=\"spinner__circle\" />\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport { fetchCharacter } from \"redux/сharacters/actions\";\r\n\r\nimport { ALIVE, API_ROOT, DEAD } from \"utils/constants\";\r\n\r\nimport Spinner from \"components/common/Spinner\";\r\n\r\nimport \"./styles.scss\";\r\n\r\nexport default function Character() {\r\n  const { id } = useParams();\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const { character, isLoading } = useSelector((state) => ({\r\n    character: state.characters.character,\r\n    isLoading: state.loader.isLoading,\r\n  }));\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchCharacter(`${API_ROOT}/character/${id}`));\r\n  }, [id, dispatch]);\r\n\r\n  return (\r\n    <div className=\"character\">\r\n      <div className=\"character__panel\">\r\n        <Link className=\"character__link\" to=\"/\">\r\n          На главную\r\n        </Link>\r\n        <h2 className=\"character__title\">Профиль персонажа</h2>\r\n      </div>\r\n\r\n      {/* eslint-disable-next-line no-nested-ternary */}\r\n      {isLoading ? (\r\n        <Spinner />\r\n      ) : character ? (\r\n        <div className=\"character__profile\">\r\n          <div className=\"characterCard__imageWrapper\">\r\n            <img\r\n              className=\"characterCard__image\"\r\n              alt={character.name}\r\n              src={character.image}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"characterCard__info\">\r\n            <div className=\"characterCard__title\">\r\n              <h3>{character.name}</h3>\r\n            </div>\r\n\r\n            <div className=\"characterCard__row\">\r\n              <span\r\n                className={`characterCard__circle ${\r\n                  character.status === ALIVE\r\n                    ? \"characterCard__circle_alive\"\r\n                    : \"\"\r\n                } ${\r\n                  character.status === DEAD ? \"characterCard__circle_dead\" : \"\"\r\n                }`}\r\n              />\r\n              {character.status} - {character.species} - {character.gender}\r\n            </div>\r\n\r\n            <div className=\"characterCard__location\">\r\n              <p>Last known location:</p>\r\n              <p>{character.location.name}</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import { fetchData } from \"utils\";\r\n\r\nimport {\r\n  FETCH_CHARACTER_LIST,\r\n  RECEIVE_CHARACTER_ERROR,\r\n  RECEIVE_CHARACTER_LIST_ERROR,\r\n  RECEIVE_CHARACTER_LIST_SUCCESS,\r\n  RECEIVE_CHARACTER_SUCCESS,\r\n  FETCH_CHARACTER,\r\n  FETCH_MORE_CHARACTER_LIST,\r\n  RECEIVE_MORE_CHARACTER_LIST_ERROR,\r\n  RECEIVE_MORE_CHARACTER_LIST_SUCCESS,\r\n} from \"../types\";\r\n\r\nexport function fetchCharacters(params) {\r\n  return {\r\n    type: FETCH_CHARACTER_LIST,\r\n    receiveData: RECEIVE_CHARACTER_LIST_SUCCESS,\r\n    receiveError: RECEIVE_CHARACTER_LIST_ERROR,\r\n    callAPI: () => fetchData(params),\r\n  };\r\n}\r\n\r\nexport function fetchMoreCharacters(params) {\r\n  return {\r\n    type: FETCH_MORE_CHARACTER_LIST,\r\n    receiveData: RECEIVE_MORE_CHARACTER_LIST_SUCCESS,\r\n    receiveError: RECEIVE_MORE_CHARACTER_LIST_ERROR,\r\n    callAPI: () => fetchData(params),\r\n  };\r\n}\r\n\r\nexport function fetchCharacter(params) {\r\n  return {\r\n    type: FETCH_CHARACTER,\r\n    receiveData: RECEIVE_CHARACTER_SUCCESS,\r\n    receiveError: RECEIVE_CHARACTER_ERROR,\r\n    callAPI: () => fetchData(params),\r\n  };\r\n}\r\n","import React from \"react\";\r\n\r\nimport Character from \"components/container/Character\";\r\n\r\nexport function CharacterPage() {\r\n  return <Character />;\r\n}\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { ALIVE, DEAD } from \"utils/constants\";\r\n\r\nimport \"./styles.scss\";\r\n\r\nexport default function CharacterCard({ item }) {\r\n  return (\r\n    <div className=\"characterCard\">\r\n      <Link to={`/characters/${item.id}`} className=\"characterCard__content\">\r\n        <div className=\"characterCard__imageWrapper\">\r\n          <img\r\n            className=\"characterCard__image\"\r\n            alt={item.name}\r\n            src={item.image}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"characterCard__info\">\r\n          <div className=\"characterCard__title\">\r\n            <h3>{item.name}</h3>\r\n          </div>\r\n          <div className=\"characterCard__row\">\r\n            <span\r\n              className={`characterCard__circle ${\r\n                item.status === ALIVE ? \"characterCard__circle_alive\" : \"\"\r\n              } ${item.status === DEAD ? \"characterCard__circle_dead\" : \"\"}`}\r\n            />\r\n            {item.status} - {item.species}\r\n          </div>\r\n          <div className=\"characterCard__location\">\r\n            <p>Last known location:</p>\r\n            <p>{item.location.name}</p>\r\n          </div>\r\n        </div>\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nCharacterCard.propTypes = {\r\n  item: PropTypes.shape({\r\n    id: PropTypes.number.isRequired,\r\n    image: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    status: PropTypes.string.isRequired,\r\n    species: PropTypes.string.isRequired,\r\n    location: PropTypes.shape({ name: PropTypes.string.isRequired }).isRequired,\r\n  }).isRequired,\r\n};\r\n","import React, { useEffect, useCallback, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport { fetchCharacters, fetchMoreCharacters } from \"redux/сharacters/actions\";\r\n\r\nimport { API_ROOT } from \"utils/constants\";\r\n\r\nimport Spinner from \"components/common/Spinner\";\r\nimport CharacterCard from \"./CharacterCard\";\r\n\r\nimport \"./styles.scss\";\r\n\r\nexport default function Characters() {\r\n  let { characters, info, isLoading } = useSelector((state) => ({\r\n    characters: state.characters.characterList,\r\n    info: state.characters.info,\r\n    isLoading: state.loader.isLoading,\r\n  }));\r\n\r\n  const [isLoadingMore, setIsLoadingMore] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const fetch = useCallback(\r\n    (url) => {\r\n      dispatch(fetchCharacters(url));\r\n    },\r\n    [dispatch],\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (isLoadingMore && !isLoading) {\r\n      dispatch(fetchMoreCharacters(info?.next));\r\n      setIsLoadingMore(false);\r\n    }\r\n  }, [dispatch, fetch, info, isLoadingMore, isLoading]);\r\n\r\n  useEffect(() => {\r\n    fetch(`${API_ROOT}/character`);\r\n  }, [dispatch, fetch]);\r\n\r\n  const observeBorder = useCallback(\r\n    (node) => {\r\n      if (node !== null) {\r\n        new IntersectionObserver(\r\n          (entries) => {\r\n            entries.forEach((en) => {\r\n              if (\r\n                en.intersectionRatio === 1 &&\r\n                info?.next &&\r\n                !isLoadingMore &&\r\n                !isLoading\r\n              ) {\r\n                setIsLoadingMore(true);\r\n              }\r\n            });\r\n          },\r\n          { threshold: 1 },\r\n        ).observe(node);\r\n      }\r\n    },\r\n    [info, isLoading, isLoadingMore],\r\n  );\r\n\r\n  return (\r\n    <div className=\"characters\">\r\n      {characters.map((item) => (\r\n        <CharacterCard key={item.id} item={item} />\r\n      ))}\r\n\r\n      {isLoading && (\r\n        <div className=\"characters__loading\">\r\n          <Spinner />\r\n        </div>\r\n      )}\r\n\r\n      <div ref={observeBorder} className=\"characters__bottom\" />\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nimport Characters from \"components/container/Characters\";\r\n\r\nexport function CharactersPage() {\r\n  return <Characters />;\r\n}\r\n","import { useLayoutEffect } from \"react\";\r\n\r\nexport function usePreventScroll() {\r\n  const bodyFixPosition = () => {\r\n    document.body.setAttribute(\"modal-open\", \"true\");\r\n  };\r\n\r\n  const bodyUnfixPosition = () => {\r\n    document.body.removeAttribute(\"modal-open\");\r\n  };\r\n\r\n  useLayoutEffect(() => {\r\n    bodyFixPosition();\r\n    return () => {\r\n      bodyUnfixPosition();\r\n    };\r\n  }, []);\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nclass ModalPortal extends React.Component {\r\n  render() {\r\n    return ReactDOM.createPortal(this.props.children, document.body);\r\n  }\r\n}\r\n\r\nexport default ModalPortal;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { usePreventScroll } from \"hooks\";\r\n\r\nimport ModalPortal from \"components/common/ModalPortal\";\r\n\r\nimport \"./modal.scss\";\r\n\r\nexport default function Modal({ children, onClose }) {\r\n  usePreventScroll();\r\n\r\n  return (\r\n    <ModalPortal>\r\n      <div\r\n        onKeyPress={onClose}\r\n        role=\"button\"\r\n        tabIndex=\"0\"\r\n        className=\"modal__backdrop\"\r\n        onClick={onClose}\r\n      />\r\n      {children}\r\n    </ModalPortal>\r\n  );\r\n}\r\n\r\nModal.propTypes = {\r\n  onClose: PropTypes.func.isRequired,\r\n};\r\n","import React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport Modal from \"components/common/Modal\";\r\n\r\nimport { hideError } from \"redux/errors/actions\";\r\n\r\nexport default function ErrorDialog() {\r\n  const { error, isError } = useSelector((state) => ({\r\n    error: state.errors.error,\r\n    isError: state.errors.isError,\r\n  }));\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  if (!isError) return null;\r\n\r\n  return (\r\n    <Modal onClose={() => dispatch(hideError())}>\r\n      <div className=\"modal\">\r\n        <div className=\"modal__error\">\r\n          <div className=\"modal__titleWrapper\"> Ошибка {error?.code}!</div>\r\n          <div className=\"modal__content\">{error?.message}</div>\r\n        </div>\r\n      </div>\r\n    </Modal>\r\n  );\r\n}\r\n","import { HIDE_ERROR } from \"../types\";\r\n\r\nexport const hideError = () => ({ type: HIDE_ERROR });\r\n","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\n\nimport { CharacterPage, CharactersPage } from \"screens\";\n\nimport ErrorDialog from \"components/common/ErrorDialog\";\n\nfunction App() {\n  return (\n    <div className=\"container\">\n      <Switch>\n        <Route exact path=\"/\" component={CharactersPage} />\n        <Route exact path=\"/characters/:id\" component={CharacterPage} />\n      </Switch>\n\n      <ErrorDialog />\n    </div>\n  );\n}\n\nexport default App;\n","import { HIDE_LOADER, SHOW_LOADER } from \"../types\";\r\n\r\nexport const hideLoader = () => ({ type: HIDE_LOADER });\r\nexport const showLoader = () => ({ type: SHOW_LOADER });\r\n","import { takeEvery, put, call } from \"redux-saga/effects\";\r\n\r\nimport { showLoader, hideLoader } from \"./loader/actions\";\r\nimport {\r\n  FETCH_CHARACTER,\r\n  FETCH_CHARACTER_LIST,\r\n  FETCH_MORE_CHARACTER_LIST,\r\n} from \"./types\";\r\n\r\nfunction* sagaWorker(action) {\r\n  const { receiveData, receiveError, callAPI } = action;\r\n  try {\r\n    yield put(showLoader());\r\n    let payload = yield call(callAPI);\r\n    yield put({ type: receiveData, payload });\r\n    yield put(hideLoader());\r\n  } catch (e) {\r\n    yield put({ type: receiveError, payload: e });\r\n    yield put(hideLoader());\r\n  }\r\n}\r\n\r\nexport function* sagaWatcher() {\r\n  yield takeEvery(FETCH_CHARACTER_LIST, sagaWorker);\r\n  yield takeEvery(FETCH_MORE_CHARACTER_LIST, sagaWorker);\r\n  yield takeEvery(FETCH_CHARACTER, sagaWorker);\r\n}\r\n","import {\r\n  RECEIVE_CHARACTER_LIST_SUCCESS,\r\n  RECEIVE_CHARACTER_SUCCESS,\r\n  RECEIVE_MORE_CHARACTER_LIST_SUCCESS,\r\n} from \"../types\";\r\n\r\nconst initialState = {\r\n  characterList: [],\r\n  character: null,\r\n  info: null,\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case RECEIVE_CHARACTER_LIST_SUCCESS:\r\n      return {\r\n        ...state,\r\n        characterList: action.payload.results,\r\n        info: action.payload.info,\r\n      };\r\n    case RECEIVE_MORE_CHARACTER_LIST_SUCCESS:\r\n      return {\r\n        ...state,\r\n        characterList: [...state.characterList, ...action.payload.results],\r\n        info: action.payload.info,\r\n      };\r\n    case RECEIVE_CHARACTER_SUCCESS:\r\n      return { ...state, character: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  HIDE_ERROR,\r\n  RECEIVE_CHARACTER_ERROR,\r\n  RECEIVE_CHARACTER_LIST_ERROR,\r\n} from \"../types\";\r\n\r\nconst initialState = {\r\n  error: null,\r\n  isError: false,\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case RECEIVE_CHARACTER_ERROR:\r\n    case RECEIVE_CHARACTER_LIST_ERROR:\r\n      return { isError: true, error: action.payload };\r\n    case HIDE_ERROR:\r\n      return initialState;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { HIDE_LOADER, SHOW_LOADER } from \"../types\";\r\n\r\nconst initialState = {\r\n  isLoading: false,\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SHOW_LOADER:\r\n      return { isLoading: true };\r\n    case HIDE_LOADER:\r\n      return initialState;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\r\n\r\nimport characters from \"./сharacters/reducer\";\r\nimport errors from \"./errors/reducer\";\r\nimport loader from \"./loader/reducer\";\r\n\r\nconst root = combineReducers({ characters, errors, loader });\r\n\r\nexport default root;\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\n\r\nimport { sagaWatcher } from \"redux/sagas\";\r\nimport rootReducer from \"./redux\";\r\n\r\nconst saga = createSagaMiddleware();\r\n\r\nconst store = createStore(rootReducer, compose(applyMiddleware(thunk, saga)));\r\n\r\nsaga.run(sagaWatcher);\r\n\r\nexport { store };\r\n","import React from \"react\";\r\nimport { render } from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\n\r\nimport App from \"./App\";\r\n\r\nimport { store } from \"./Store\";\r\n\r\nimport \"./index.scss\";\r\n\r\nconst app = (\r\n  <Provider store={store}>\r\n    <Router>\r\n      <App />\r\n    </Router>\r\n  </Provider>\r\n);\r\n\r\nrender(app, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}